/** NOTE: 자동완성 단어 커스마이징 설정
 * 탭 멈춤 위치 지정: $1, $2, ...
 * 플레이스 홀더: ${1:label}, ${2:another}, ...
 * 마지막 커서 멈춤 위치: $0
 * 
 * 예시:
 * "console 표기명": {
 *     "prefix"     : "자동완성 단어",
 *     "description": "console 표기 설명"
 *     "body"       : [
 *         "console.log('$1');",
 *         "$2"
 *     ],
 * }
*/
{
    "Vue Gloabl Component": {
        "prefix"     : "vueglobal",
        "description": "Vue 컴포넌트 전반적인 기능 및 설명이 명시되어 있는 템플릿",
        "body"       : [
            "<template>$1",
            "</template>",
            "",
            "<script>",
            "export default {",
            "    //현재 컴포넌트에서 사용할 컴포넌트 명시",
            "    components: {",
            "    },",
            "    // 속성 자동 맵핑을 원하지 않을 경우 false 로 설정. 기본값 true",
            "    inheritAttrs: true,",
            "    // 부모 컴포넌트에게 전달받을 속성 정의",
            "    props: {",
            "    },",
            "    // 부모 컴포넌트에게 전달받을 이벤트 명을 명시",
            "    emits: [",
            "    ],",
            "    // 조상 컴포넌트에게 전달받을 데이터 명시",
            "    inject: [",
            "    ],",
            "    // 사용할 데이터 명시",
            "    data() {",
            "        return {$2",
            "        }",
            "    },",
            "    // 계산하여 사용할 데이터 명시",
            "    computed: {",
            "    },",
            "    // 자손 컴포넌트에 전달할 데이터를 명시",
            "    provide(){",
            "        return {",
            "        }",
            "    },",
            "    // 사용할 메서드 명시",
            "    methods: {",
            "    },",
            "    // 데이터가 변경될 때 동작할 메서드 명시",
            "    watch: {",
            "    },",
            "",
            "    // 컴포지션 API 선언부",
            "    setup(){",
            "        return { // 사용할 데이터와 메소드 명시",
            "        }",
            "    },",
            "    /* ================ 컴포넌트 생명주기 ================ */",
            "    beforeCreate() { // 컴포넌트 생성 및 초기화 후",
            "    },",
            "    created() {     // 데이터 생성 후",
            "    },",
            "    beforeMount() { // DOM 연결 전",
            "    },",
            "    mounted() {     // DOM 연결 후",
            "    },",
            "    beforeUpdate() { // 데이터 변경 후 렌더링 전",
            "    },",
            "    updated() {     // 데이터 변경 후 렌더링 후",
            "    },",
            "}",
            "</script>",
            "",
            "<style lang='scss' scoped>",
            "",
            "</style>",
        ],
    },
    "Vue Simple Component": {
        "prefix"     : "vuesimple",
        "description": "심플한 Vue 컴포넌트 템플릿",
        "body"       : [
            "<template>$1",
            "</template>",
            "",
            "<script>",
            "export default {",
            "    components: {",
            "    },",
            "    data() {",
            "        return {$2",
            "        }",
            "    },",
            "    computed: {",
            "    },",
            "    methods: {",
            "    },",
            "    watch: {",
            "    },",
            "}",
            "</script>",
        ],
    },
    "Vue Inherit Component": {
        "prefix"     : "vueinherit",
        "description": "Vue 컴포넌트 상속 관련 설명이 명시되어 있는 템플릿",
        "body"       : [
            "<template>$1",
            "</template>",
            "",
            "<script>",
            "export default {",
            "    components: {",
            "    },",
            "    // 속성 자동 맵핑을 원하지 않을 경우 false 로 설정. 기본값 true",
            "    inheritAttrs: ${2:false},",
            "    // 부모 컴포넌트에게 전달받을 속성 정의",
            "    props: {",
            "        ${3:변수명}: {",
            "            type: ${4:String},",
            "            default: ${5:\"\"}",
            "            ${6:required: true}",
            "        }",
            "    },",
            "    // 부모 컴포넌트에게 전달받을 이벤트 명을 명시",
            "    emits: [$7",
            "    ],",
            "    // 조상 컴포넌트에게 전달받을 데이터 명시",
            "    inject: [$8",
            "    ],",
            "    data() {",
            "        return {$9",
            "        }",
            "    },",
            "    computed: {",
            "    },",
            "    // 자손 컴포넌트에 전달할 데이터를 명시",
            "    provide(){",
            "        return {$10",
            "        }",
            "    },",
            "    methods: {",
            "    },",
            "    watch: {",
            "    },",
            "}",
            "</script>",
        ],
    },
	"Vue Composition API": {
        "prefix"     : "vuecomposition",
        "description": "컴포지션 API를 이용하는 템플릿",
        "body"       : [
            "<template>$1",
            "</template>",
            "",
            "<script>",
            "export default {",
            "    inheritAttrs: ${2:false},",
            "    props: {",
            "        ${3:변수명}: {",
            "            type: ${4:String},",
            "            default: ${5:\"\"}",
            "            ${6:required: true}",
            "        }",
            "    },",
            "    // 컴포지션 API 선언부",
            "    setup(props, context){",
            "        // data",
            "        // 반응성을 갖기 위해 ref 사용 -> 객체데이터가 할당된다. -> 사용 시 변수명.value 로 접근한다.",
            "        const $7 = ref($8)",
            "        // computed",
            "        const $9 = computed(() => {",
            "            return $10",
            "        })",
            "        // methods",
            "        function $11() {}",
            "        // watch",
            "        watch($12, (newValue, oldValue) => {})",
            "        ",
            "        return { // 사용한 변수명과 함수명을 모두 명시한다.",
            "            $7,",
            "            $9,",
            "            $11,",
            "        }",
            "    }",
            "}",
            "</script>",
        ],
    },
    "Vue Component With Life Cycle": {
        "prefix"     : "vuelifecycle",
        "description": "Vue 컴포넌트 생명주기가 명시되어 있는 템플릿",
        "body"       : [
            "<template>$1",
            "</template>",
            "",
            "<script>",
            "export default {",
            "    components: {",
            "    },",
            "    data() {",
            "        return {$2",
            "        }",
            "    },",
            "    computed: {",
            "    },",
            "    methods: {",
            "    },",
            "    watch: {",
            "    },",
            "",
            "    /* ================ 컴포넌트 생명주기 ================ */",
            "    beforeCreate() { // 컴포넌트 생성 및 초기화 후",
            "    },",
            "    created() {     // 데이터 생성 후",
            "    },",
            "    beforeMount() { // DOM 연결 전",
            "    },",
            "    mounted() {     // DOM 연결 후",
            "    },",
            "    beforeUpdate() { // 데이터 변경 후 렌더링 전",
            "    },",
            "    updated() {     // 데이터 변경 후 렌더링 후",
            "    },",
            "}",
            "</script>",
        ],
    },
}